[{"/home/umer/dev/graphqljobs/src/index.js":"1","/home/umer/dev/graphqljobs/src/containers/App/index.js":"2","/home/umer/dev/graphqljobs/src/components/Jobs/index.js":"3","/home/umer/dev/graphqljobs/src/queries/index.js":"4","/home/umer/dev/graphqljobs/src/components/JobDetail/index.js":"5","/home/umer/dev/graphqljobs/src/components/Jobs/JobCard/Index.js":"6"},{"size":457,"mtime":1609503604000,"results":"7","hashOfConfig":"8"},{"size":897,"mtime":1609765503146,"results":"9","hashOfConfig":"8"},{"size":1736,"mtime":1609684819512,"results":"10","hashOfConfig":"8"},{"size":537,"mtime":1609765588248,"results":"11","hashOfConfig":"8"},{"size":2398,"mtime":1609767738329,"results":"12","hashOfConfig":"8"},{"size":2137,"mtime":1609765321495,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1kbvaqc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/umer/dev/graphqljobs/src/index.js",["28"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"reactstrap\";\nimport App from \"./containers/App\";\n\nString.prototype.trimEllip = function (length) {\n  return this.length > length ? this.substring(0, length) + \"...\" : this;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <App />\n    </Container>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","/home/umer/dev/graphqljobs/src/containers/App/index.js",["29"],"/home/umer/dev/graphqljobs/src/components/Jobs/index.js",["30"],"import React, {useState} from \"react\";\nimport JobCard from \"./JobCard/Index\";\nimport { useQuery } from \"@apollo/client\";\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleNotch, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport {GQL_JOBS} from \"./../../queries\";\n\nconst Jobs = () => {\n  let filteredJobs = [];\n  const [search, setSearch] = useState(\"\");\n  const { loading, error, data } = useQuery(GQL_JOBS);\n\n  if (loading) {\n    return (\n      <div className=\"m-auto\" style={{ width: \"100px\" }}>\n        <FontAwesomeIcon icon={faCircleNotch} size=\"6x\" spin></FontAwesomeIcon>\n      </div>\n    );\n  }\n\n  if (error) return <p>There is an error while fetching data from API. Please check your internet connection</p>;\n  \n  \n  // const searchJob = (event) =>\n  // {\n  //    event.persist();\n  if (search.trim() == \"\") {\n    filteredJobs = data.jobs;    \n  }else{\n    filteredJobs = data.jobs.filter(each => {\n      return each.title.toLowerCase().includes(search) || each.company.name.toLowerCase().includes(search);\n    });\n  }\n  // }\n\n  return (\n    <div>\n      <InputGroup className=\"mt-2 mb-2\">\n        <InputGroupAddon addonType=\"prepend\">\n           <InputGroupText><FontAwesomeIcon icon={faSearch}></FontAwesomeIcon></InputGroupText>\n        </InputGroupAddon>\n        <Input placeholder=\"type to search\" onChange={(e)=>setSearch(e.target.value)}/>\n      </InputGroup>\n      <div className=\"border\">\n        { filteredJobs.length ? \"\" : \"No record found\"}\n        {filteredJobs.map((each) => (\n          <JobCard key={each.id} job={each} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Jobs;\n","/home/umer/dev/graphqljobs/src/queries/index.js",["31"],"/home/umer/dev/graphqljobs/src/components/JobDetail/index.js",[],"/home/umer/dev/graphqljobs/src/components/Jobs/JobCard/Index.js",[],{"ruleId":"32","severity":1,"message":"33","line":7,"column":1,"nodeType":"34","messageId":"35","endLine":9,"endColumn":2},{"ruleId":"36","severity":1,"message":"37","line":4,"column":50,"nodeType":"38","messageId":"39","endLine":4,"endColumn":54},{"ruleId":"40","severity":1,"message":"41","line":28,"column":21,"nodeType":"42","messageId":"35","endLine":28,"endColumn":23},{"ruleId":"36","severity":1,"message":"43","line":1,"column":10,"nodeType":"38","messageId":"39","endLine":1,"endColumn":18},"no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useQuery' is defined but never used."]